using Sandbox.Graphics.GUI;
using SEWorldGenPlugin.Generator;
using SEWorldGenPlugin.GUI.Controls;
using SEWorldGenPlugin.ObjectBuilders;
using SEWorldGenPlugin.Session;
using SEWorldGenPlugin.Utilities;
using VRageMath;

namespace SEWorldGenPlugin.GUI.AdminMenu.SubMenus
{
    /// <summary>
    /// The star system designer admin menu, used to create and edit star systems generated by the plugin.
    /// </summary>
    public class MyStarSystemDesignerMenu : MyPluginAdminMenuSubMenu
    {
        /// <summary>
        /// The current fetched star system of the server
        /// </summary>
        private MyObjectBuilder_SystemData m_fetchedStarSytem;

        /// <summary>
        /// A list box containing all system objects
        /// </summary>
        private MyGuiControlListbox m_systemObjectsBox;

        /// <summary>
        /// Button used to refresh the fetched system and object list
        /// </summary>
        private MyGuiControlButton m_refreshSystemButton;

        /// <summary>
        /// Current instance to the admin menu
        /// </summary>
        private MyAdminMenuExtension m_adminMenuInst;

        public override void Close()
        {
            m_adminMenuInst = null;
        }

        public override string GetTitle()
        {
            return "Star System Designer";
        }

        public override bool IsVisible()
        {
            return MyPluginSession.Static.ServerVersionMatch;//Star system designer is only visible, IFF server and client version match up
        }

        public override void RefreshInternals(MyGuiControlParentTableLayout parent, float maxWidth, MyAdminMenuExtension instance)
        {
            MyPluginLog.Debug("Building Star system designer admin menu");

            m_adminMenuInst = instance;

            if(m_fetchedStarSytem == null)
            {
                MyStarSystemGenerator.Static.GetStarSystem(delegate (MyObjectBuilder_SystemData starSystem)
                {
                    m_fetchedStarSytem = starSystem;
                    m_adminMenuInst.RequestRecreate();
                });

                m_fetchedStarSytem = new MyObjectBuilder_SystemData();
            }

            MyGuiControlLabel systemBoxLabel = new MyGuiControlLabel(null, null, "System Objects");
            parent.AddTableRow(systemBoxLabel);

            m_systemObjectsBox = new MyGuiControlListbox();
            m_systemObjectsBox.VisibleRowsCount = 8;
            m_systemObjectsBox.Size = new Vector2(maxWidth, m_systemObjectsBox.Size.Y);

            parent.AddTableRow(m_systemObjectsBox);

            m_refreshSystemButton = MyPluginGuiHelper.CreateDebugButton("Refresh", RefreshSystem, true);
            m_refreshSystemButton.Size = new Vector2(maxWidth, m_refreshSystemButton.Size.Y);

            parent.AddTableRow(m_refreshSystemButton);

            parent.AddTableSeparator();
        }

        /// <summary>
        /// Action called to refresh the system
        /// </summary>
        /// <param name="btn"></param>
        private void RefreshSystem(MyGuiControlButton btn)
        {
            MyStarSystemGenerator.Static.GetStarSystem(delegate (MyObjectBuilder_SystemData starSystem)
            {
                m_fetchedStarSytem = starSystem;
                m_adminMenuInst.RequestRecreate();
            });
        }
    }
}
